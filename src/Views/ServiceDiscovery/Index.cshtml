<div class="row" id="page-body">
	<div class="col-xl-6">
		<div class="card shadow" >
			<div class="card-header py-3">
				<h6 class="m-0 font-weight-bold text-primary">Service Discovery</h6>
			</div>
			<div class="card-body">
				<p>One of the key challanges with microservices is keep track of all the endpoints
					and dynamically responding to availability of each. Eureka service based on Netflix OSS
					stack helps us with this. </p>
				<table class="table">
					<thead>
					<tr>
						<th>Service Name</th>
						<th>Url(s)</th>
					</tr>
					</thead>
					<tbody>
					<tr v-for="si in instances">
						<td>{{ si.name }}</td>
						<td>
							<ul class="list-unstyled">
								<li v-for="url in si.urls">{{ url }}</li>
							</ul>
						</td>
					</tr>
					</tbody>
				</table>
				<div class="row">
                    <div class="col-sm">
						<a href="#" class="btn btn-secondary btn-icon-split" v-on:click="pingAll">
							<span class="icon text-white-50">
								<i class="fas fa-exchange-alt"></i>
							</span>
							<span class="text">Send distributed ping</span>
						</a>
                    </div>
					<div class="col-sm"><code>{{ response }}</code></div>
				</div>
			</div>
		</div>
	</div>
</div>


<script>

var pageModel = new Vue({
    el: '#page-body',
    data: {
    	app: {},
        instances: [{
			name: "test",
			urls: ["http://localhost"]
    	}],
    	response: ""
    },
    mounted: function() {
    	var self = this;
    	self.refresh();
    	setTimeout(() => self.refresh(), 1000);
    	var instanceInfoUrl = "@Url.Action("InstanceInfo", "Home")";
    	$.get(instanceInfoUrl, function(appEnv) {
            self.app = appEnv;
		});
    },
    methods: {
        pingAll: function () {
            var self = this;
            var targets = self.instances
				.map((el) => { return el.name }) 
				.filter((el) => {
					return el !== self.app.appName;
				})
				
				.join(',');
            console.log(targets);
            $.post("@Url.Action("Ping","ServiceDiscovery")" + "?targets=" + targets)
             .done(function (result) {
             	self.response = result;
            });
            
        },
        refresh: function () {
    		var self = this;
    		$.get("@Url.Action("GetServiceDiscoveryInstances","ServiceDiscovery")", function (results) {
				self.instances = results;
    		});
		}
    }
});
</script>